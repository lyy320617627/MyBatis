<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--指定properties文件的位置，从类路径根开始找文件-->
    <properties resource="jdbc.properties">

    </properties>
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <!--定义别名-->
    <typeAliases>
        <!--第一种方式-->
       <!-- &lt;!&ndash;可以指定一个类型一个自定义别名
        type:自定义类型的全限定名称
        alias：自定义别名（短小，容易记忆的）
        &ndash;&gt;
        <typeAlias type="com.lyy.domain.Student" alias="stu"/>
        <typeAlias type="com.lyy.vo.ViewStudent" alias="vstu"/>-->
        <!--第二种方式
        <package> name是包名，这个包中的所有类，类名就是别名（类名不区分大小写）
        -->
        <package name="com.lyy.domain"/>
        <package name="com.lyy.vo"/>
    </typeAliases>
    <!--配置插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor" />
    </plugins>
    <environments default="mydev">
        <environment id="mydev">
            <!--
            transactionManager:mybatis提交事务，回滚事务的方式
            type：事务的处理的类型
            1）JDBC:表示mybatis底层是调用JDBC中的Connection对象的，commit，rollback
            2）MANAGER：把mybatis的事务处理委托给其他的容器（一个服务器软件，一个框架（spring））



            -->
            <transactionManager type="JDBC"/>
            <!--
            dataSource：表示数据源1，java体系中，规定了实现了javax.sql.DataSource接口的都是数据源
            数据源表示Connection对象的
            1)POOLED：使用连接池，mybatis会创建pooledDataSource类
            2）UPOOLED：不使用连接池，在每一次执行sql语句的时候，先创建连接，执行sql，再关闭连接
            mybatis会创建unPooledDataSource，管理Connection对象的使用
             3）JNDI：java命名和目录服务（windows的注册表）
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.passwd}"/>
            </dataSource>
        </environment>
    </environments>
    <!--sql mapper（sql映射文件）的位置-->
    <mappers>
        <!--第一种方式：指定多个文件mapper文件-->
        <!--<mapper resource="com.lyy.dao.OrderDao.xml"/>-->
<!--        <mapper resource="com/lyy/dao/StudentDao.xml"/>-->
        <!--第二种方式：使用包名
         name:xml(mapper文件)所在的包名,这个包中的xml文件一次都能加载给mybatis
         使用package的要求：
         1.mapper文件名称需要和接口名称一样，区分大小写的一样
         2.mapper文件和dao需要在同一目录
        -->
        <package name="com.lyy.dao"/>
    </mappers>
</configuration>
